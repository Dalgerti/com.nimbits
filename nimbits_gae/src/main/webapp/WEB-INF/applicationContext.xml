<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <beans:import resource="context.xml"/>


    <bean id="cache" class="com.nimbits.server.transaction.cache.GoogleCache"/>

    <bean id="userCache" class="com.nimbits.server.transaction.user.cache.UserCacheImpl"/>
    <bean id="userService" class="com.nimbits.server.transaction.user.service.UserServiceImpl"/>

    <bean id="entityService" class="com.nimbits.server.transaction.entity.EntityServiceImpl"/>
    <bean id="authService" class=" com.nimbits.server.auth.AuthServiceImpl"/>

    <bean id="settingsService" class="com.nimbits.server.transaction.settings.SettingsServiceImpl"/>
    <bean id="settingsCache" class="com.nimbits.server.transaction.settings.SettingsCacheImpl"/>

    <bean id="settingsDao" class="com.nimbits.server.transaction.settings.SettingsDaoImpl">
        <property name="persistenceManagerFactory" ref="pmf"/>
    </bean>

    <bean id="recursionValidation" class="com.nimbits.server.orm.validation.RecursionValidation"/>
    <bean id="emailService" class="com.nimbits.server.communication.mail.EmailServiceImpl">

    </bean>

    <bean id="blobStore" class="com.nimbits.server.io.BlobStoreImpl">
        <property name="persistenceManagerFactory" ref="pmf"/>
    </bean>
    <bean id="entityDao" class="com.nimbits.server.transaction.entity.dao.EntityDaoImpl">
        <property name="persistenceManagerFactory" ref="pmf"/>
    </bean>

    <bean id="counterService" class="com.nimbits.server.counter.CounterServiceImpl"/>
    <bean id="userDao" class="com.nimbits.server.transaction.user.dao.UserDaoImpl">
        <property name="persistenceManagerFactory" ref="pmf"/>
    </bean>

    <bean id="valueService" class="com.nimbits.server.transaction.value.service.ValueServiceImpl"/>
    <bean id="valueCache" class="com.nimbits.server.transaction.value.cache.ValueCacheImpl"/>
    <bean id="valueDao" class="com.nimbits.server.transaction.value.dao.ValueDaoImpl"/>

    <bean id="calculationService" class="com.nimbits.server.transaction.calculation.CalculationServiceImpl"/>
    <bean id="summaryService" class="com.nimbits.server.transaction.summary.SummaryServiceImpl"/>
    <bean id="syncService" class="com.nimbits.server.transaction.sync.SyncServiceImpl"/>
    <bean id="subscriptionService" class="com.nimbits.server.transaction.subscription.SubscriptionServiceImpl"/>



    <bean id="xmppService" class="com.nimbits.server.communication.xmpp.XmppServiceImpl"/>

    <bean id="taskService" name="taskService" class="com.nimbits.server.process.task.TaskServiceImpl"/>


    <bean id="entityCache" class="com.nimbits.server.transaction.entity.cache.EntityCacheImpl"/>

    <bean id="chartHelper" class="com.nimbits.server.chart.ChartHelper"/>

    <bean id="connectedClients" class="com.nimbits.server.socket.ConnectedClients"
            factory-method="getInstance"

            />

    <bean id="transactionManager" class="org.springframework.orm.jdo.JdoTransactionManager"
          p:persistenceManagerFactory-ref="pmf" />

    <!--<bean id="transactionAwarePersistenceManagerFactoryProxy"-->
          <!--class="org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy"-->
          <!--p:targetPersistenceManagerFactory-ref="pmf"-->
          <!--p:allowCreate="false" />-->

    <bean id="pmf"
          class="org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean">
        <property name="jdoPropertyMap">
            <props>
                <prop key="javax.jdo.PersistenceManagerFactoryClass">
                    org.datanucleus.api.jdo.JDOPersistenceManagerFactory
                </prop>
                <prop key="javax.jdo.option.ConnectionURL">appengine</prop>
                <prop key="javax.jdo.option.NontransactionalRead">true</prop>
                <prop key="javax.jdo.option.NontransactionalWrite">true</prop>
                <prop key="javax.jdo.option.RetainValues">false</prop>
                <prop key="javax.jdo.option.DetachAllOnCommit">true</prop>
                <prop key="javax.jdo.option.Multithreaded">true</prop>
                <prop key="datanucleus.appengine.ignorableMetaDataBehavior">NONE</prop>
                <prop key="datanucleus.appengine.autoCreateDatastoreTxns">true</prop>
            </props>
        </property>
    </bean>


</beans>